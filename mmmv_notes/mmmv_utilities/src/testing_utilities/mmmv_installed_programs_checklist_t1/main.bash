#!/usr/bin/env bash
#==========================================================================
# Initial author(2021_02_16): Martin.Vahi@softf1.com
# This file is in public domain.
#
# The following line is a spdx.org license label line:
# SPDX-License-Identifier: 0BSD
#==========================================================================
S_TIMESTAMP="`date +%Y`_`date +%m`_`date +%d`_T_`date +%H`h_`date +%M`min_`date +%S`s"
S_FP_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" # the parent folder of this script file
S_FN_SCRIPTFILE="`basename ${BASH_SOURCE[0]}`"
#--------------------------------------------------------------------------
S_ACCEPTED_HOSTNAME="capella.elkdata.ee" # please update this line
if [ "$HOSTNAME" != "$S_ACCEPTED_HOSTNAME" ]; then
    echo ""
    echo "This script is meant to be run on a machine that "
    echo "has a hostname of \"$S_ACCEPTED_HOSTNAME\", but "
    echo "it was run on a machine that has a hostname of \"$HOSTNAME\"."
    echo "The value of the accepted hostname can be changed at "
    echo ""
    echo "    $S_FP_DIR/$S_FN_SCRIPTFILE"
    echo ""
    echo "above the following GUID:"
    echo "GUID=='fb592e02-5542-4715-8da7-2131e02125e7'"
    echo ""
    exit 1 # before attempting to create the tmp_ folder
fi
#--------------------------------------------------------------------------
S_FP_TMP="$S_FP_DIR/bonnet/tmp_"
mkdir -p "$S_FP_TMP" ; sync; wait # for USB drives, network drives, etc.
if [ ! -e "$S_FP_TMP" ]; then
    echo ""
    echo "Failed to create "
    echo ""
    echo "    $S_FP_TMP"
    echo ""
    echo "GUID=='a4f63b3b-bc22-4038-ba47-2131e02125e7'"
    echo ""
    exit 1
fi
S_TMP_0="_autogenerated_testscript.bash"
S_FP_TMP_BASH="$S_FP_TMP/$S_TIMESTAMP$S_TMP_0"
cat "$S_FP_DIR/bonnet/core.bash"  > $S_FP_TMP_BASH ; sync; wait 
if [ ! -e "$S_FP_TMP_BASH" ]; then
    echo ""
    echo "Failed to create "
    echo ""
    echo "    $S_FP_TMP_BASH"
    echo ""
    echo "GUID=='4c1f5ff3-655d-4c23-9b27-2131e02125e7'"
    echo ""
    exit 1
fi
#--------------------------------------------------------------------------
# The 
# cat ./one_program_per_line.txt | sed -e 's/[\#].*//g' | sed -e 's/ //g' | sed -e "s/$(printf '\t')//g" | sed -e '/^$/d' 
# outputs commentless text and 
cat "$S_FP_DIR/one_program_per_line.txt" | sed -e 's/[\#].*//g' | sed -e 's/ //g' | sed -e "s/$(printf '\t')//g" | sed -e '/^$/d' \
  | sed -e 's/^/t "/' | sed -e 's/$/"/' >> $S_FP_TMP_BASH 
sync; wait 
nice -n 15 bash "$S_FP_TMP_BASH" "$S_TIMESTAMP"
rm -f "$S_FP_TMP_BASH"

